[gd_scene load_steps=15 format=2]

[ext_resource path="res://Rayon.gd" type="Script" id=1]
[ext_resource path="res://assets/beam_lingle_line.png" type="Texture" id=4]
[ext_resource path="res://ShaderRayon.gd" type="Script" id=5]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D noise: hint_white;

void fragment() { 
//	float speed_factor = TIME / 5.0;
//
//	float thickness_factor = 0.2; // float thickness_factor = (1.0 - pow(COLOR.a, 2));
//
//	vec2 fake_UV = vec2(abs(0.5 - UV.y) * thickness_factor, COLOR.a + speed_factor);
//
//	vec4 n = texture(noise, fake_UV);
//
//	float grey = 1.0 - (0.2126 * n.r + 0.7152 * n.g + 0.0722 * n.b);
//
//	if (grey < 0.55) { 
//		COLOR.a = COLOR.a * pow(grey, 2); 
//	}
//
//	if (grey < 0.5) { 
//		discard; 
//	} 

	if (UV.y > 0.5) {
		COLOR = vec4(0,0,2.0,1.0);
	}else {
		
		COLOR = vec4(2.0,0,0,1.0);
	}
		COLOR = vec4(0,0,2.0,1.0);
}"

[sub_resource type="OpenSimplexNoise" id=2]
seed = 5
octaves = 5
period = 83.3
lacunarity = 1.62

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/noise = SubResource( 3 )

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0, 0.511111, 1 )
colors = PoolColorArray( 1, 0.464844, 0.464844, 1, 1, 0, 0, 1, 0, 0, 0, 0.878431 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="ParticlesMaterial" id=7]
emission_shape = 2
emission_box_extents = Vector3( 5, -5, 1 )
flag_disable_z = true
spread = 0.0
gravity = Vector3( 0, -5, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
color_ramp = SubResource( 6 )

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;

uniform float strength: hint_range(0.0, 3.0);
uniform sampler2D noise;
uniform vec2 texture_size;
uniform float high_threshold: hint_range(0.0, 0.5);
uniform float low_threshold: hint_range(0.0, 0.5);
uniform float beam_width: hint_range(0.0, 10.0);
uniform float speed: hint_range(0.0, 10.0);
uniform float noise_threshold: hint_range(0.0, 1.0);
uniform vec4 base_color: hint_color;


void fragment() {
	vec4 color = base_color;
	float y_alpha;
	vec2 pixel_width = texture_size;
	float half_beam_width = beam_width/(2.0*pixel_width.x);
	
	// To smooth both ends
	if (UV.y < low_threshold+0.02) {
		y_alpha = UV.y/ low_threshold;
	} else if (UV.y > 1.0-high_threshold-0.02) {
		float m = 1.0 / -high_threshold;
		float b = -m;
		y_alpha = m*UV.y + b;
	} else {
		y_alpha = 1.1;
	}
	
	// Read our noise and make it flow upward with time 
	float noise_value = texture(noise, vec2(UV.x, UV.y+TIME*speed)).b;
	if (noise_value < noise_threshold) {
		noise_value = 0.0;
	}
	float x_alpha;
	if (UV.x <= 0.5-half_beam_width) {
		x_alpha = 2.0*UV.x;
	} else if (UV.x > 0.5+half_beam_width) {
		x_alpha = -2.0*UV.x+2.0;
	} else {
		// Make our center brighter
		x_alpha = 1.1;
	}
	
	color.a = x_alpha;
	color.a *= noise_value;
	color *= strength;
		
	color.a = color.a*y_alpha ;
	vec4 sc_color = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	COLOR = color * sc_color;
	COLOR = color ;
}"

[sub_resource type="OpenSimplexNoise" id=8]
seed = -3
octaves = 8
period = 83.3

[sub_resource type="NoiseTexture" id=9]
noise = SubResource( 8 )

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 11 )
shader_param/strength = 0.839
shader_param/texture_size = Vector2( 43, 160 )
shader_param/high_threshold = 0.2
shader_param/low_threshold = 0.17
shader_param/beam_width = 3.0
shader_param/speed = 0.87
shader_param/noise_threshold = 0.0
shader_param/base_color = Color( 0.992157, 0, 0, 1 )
shader_param/noise = SubResource( 9 )

[node name="Rayon" type="Node2D"]
script = ExtResource( 1 )

[node name="Line2D" type="Line2D" parent="."]
visible = false
material = SubResource( 4 )
position = Vector2( 0.5, 0 )
z_index = 1
points = PoolVector2Array( 0, -40, 0, 0 )
width = 3.0
default_color = Color( 1, 1, 1, 1 )

[node name="Particles2D" type="Particles2D" parent="."]
position = Vector2( 0, 21 )
amount = 12
lifetime = 6.0
process_material = SubResource( 7 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 10 )
position = Vector2( -20, -73 )
scale = Vector2( 43, 16 )
texture = ExtResource( 4 )
centered = false
region_rect = Rect2( -32, -81, 62, 2081 )
script = ExtResource( 5 )
